///Users/harisucici/Desktop/HebcaLog_iOS/HebcaLog.xcodeproj
//  HBSettingViewController.m
//  HebcaLog
//
//  Created by 周超 on 15/3/15.
//  Copyright (c) 2015年 hebca. All rights reserved.
//

#import "HBDoorlistViewController.h"
//#import "HBPasswordViewController.h"
//#import "HBAboutViewController.h"
#import "HBMLogLoginViewController.h"
#import "HBInviteUserViewController.h"
#import "HBCommonUtil.h"
#import "HBFileManager.h"
#import "ToastUIView.h"
#import "AppDelegate.h"
#import <QuartzCore/QuartzCore.h>
#import <AddressBook/AddressBook.h>
#import "HBCommonUtil.h"
#import "HBServerInterface.h"
#import "AppDelegate.h"
#import "HBLocationService.h"
#import "ToastUIView.h"
#import "HBServerConfig.h"
#import "HBServerInterface.h"

@interface HBDoorlistViewController ()

@end

@implementation HBDoorlistViewController
{
    NSString *userid;
    NSString *updateUrlStr;
    HBServerConnect *serverConnect;
    HBServerConnect *serverConnect1;
    HBServerConnect *serverConnect2;
    HBLocationService *locationService;
    NSMutableArray *doorList;
//    int *doorListCount;
}


- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    
    userid = [HBCommonUtil getUserId];
    
    serverConnect1 = [[HBServerConnect alloc] init];
    serverConnect2 = [[HBServerConnect alloc] init];
    [self doList];
    
    [self configNavigationBar];
    [self.setTabelView setSeparatorInset:UIEdgeInsetsZero];
    
    if ([UIScreen mainScreen].bounds.size.height > 480) {
        self.setTabelView.scrollEnabled = NO;
        self.setTabelView.rowHeight = 60.0;
    } else {
        self.setTabelView.scrollEnabled = YES;
        self.setTabelView.rowHeight = 48.0;
    }
    
    [self showUserHeadImage];
  
}


- (void)doList {
    MBProgressHUD *hud = [[MBProgressHUD alloc] init];
    hud.labelText = @"获取列表...";
    [self.view addSubview:hud];
    
    __block HBDoorListInfo *errorMsg = nil;
    [hud showAnimated:YES whileExecutingBlock:^{
//        errorMsg = [self attendActCheckout];
        doorList = [self attendActCheckout];
    }completionBlock:^{
        [hud removeFromSuperview];
        self.setTabelView.reloadData;
        if (errorMsg) {
            [HBCommonUtil showAttention:errorMsg sender:self];
            return;
        }

        [HBCommonUtil updateAttendState:NO];
        [self.view makeToast:@"获取列表成功"];
    }];
}

- (NSMutableArray *)attendActCheckout
{
    NSMutableArray *serverAttend = [serverConnect2 getDoorListInfo:userid];
    
//    NSInteger attendType = serverAttend.type;
//    if (attendType != 1) {
//        return @"上班打卡失败";
//    }

    return serverAttend;
}

//////////////////
- (void)doOpen:(HBDoorListInfo *)doorListInfo {
    HBDoorListInfo *tempDoorListInfo = doorListInfo;
    MBProgressHUD *hud = [[MBProgressHUD alloc] init];
    hud.labelText = @"正在开门...";
    [self.view addSubview:hud];
    
    __block NSString *errorMsg = nil;
    [hud showAnimated:YES whileExecutingBlock:^{
        errorMsg = [self sendDoorOpen:tempDoorListInfo];
    }completionBlock:^{
        [hud removeFromSuperview];
        
        if (errorMsg) {
            [HBCommonUtil showAttention:errorMsg sender:self];
            return;
        }

        [HBCommonUtil updateAttendState:YES];
        
        [self.view makeToast:@"开门成功"];
    }];
}


- (NSString *)sendDoorOpen:(HBDoorListInfo *)doorListInfo
{
    HBDoorListInfo *tempDoorListInfo = doorListInfo;
//    //为保证打卡获取到最新位置，打卡时先获取一下最新位置
    [locationService locateUserCurrentPosition];
    while (locationService.inLocating) {
    }
    
    HBLocation *location = [HBCommonUtil getUserLocation];

    
    HBSendDoorOpenInfo *sendDoorOpenInfo = [[HBSendDoorOpenInfo alloc] init];
    sendDoorOpenInfo.userId = userid;
    sendDoorOpenInfo.longitude = location.longitude;
    sendDoorOpenInfo.latitude  = location.latitude;
    sendDoorOpenInfo.address   = location.address;
    sendDoorOpenInfo.CID   = tempDoorListInfo.CID;
    sendDoorOpenInfo.IID   = tempDoorListInfo.IID;
    sendDoorOpenInfo.IState   = @"1";
    

    NSInteger result = [serverConnect1 getDoorOpenInfo2:sendDoorOpenInfo];
    if (result != HM_OK) {
        return [serverConnect1 getLastErrorMessage];
    }
    
//    NSInteger *serverDoor = [serverConnect1 getDoorOpenInfo2:sendDoorOpenInfo];
    
    
//    NSInteger attendType = serverDoor.type;
//    if (attendType != 1) {
//        return @"上班打卡失败";
//    }
    
    return nil;
}

/////////////////////////


- (void)viewWillAppear:(BOOL)animated
{
    NSString *userName = [HBCommonUtil getUserName];
    NSString *deptName = [HBCommonUtil getDeptName];
    
    self.userNameLabel.text = userName;
    self.divNameLabel.text = deptName;
    
    self.userHeadImg.layer.cornerRadius = 1.0;
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)showUserHeadImage
{
    UIImage *image = [HBCommonUtil getUserHead:userid];
    if (image) {
        [self.userHeadImg setImage:image forState:UIControlStateNormal];
    }
}


#pragma mark - tableview

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return doorList.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CertIdentifier = @"CellIdentifier";
    UITableViewCell *cell  = [tableView dequeueReusableCellWithIdentifier:CertIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CertIdentifier];
    }
    cell.textLabel.font = [UIFont systemFontOfSize:17.0];
    HBDoorListInfo *doorListInfo  = doorList[indexPath.row];
    cell.textLabel.text = doorListInfo.Iname;
    
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    HBDoorListInfo *doorListInfo  = doorList[indexPath.row];
    NSString *tempCID = doorListInfo.CID;
    [self doOpen:doorListInfo];

}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

- (IBAction)changeHeadImg:(id)sender {
    
    NSArray *popViewOptions = [NSArray arrayWithObjects:@{@"text":@"照相机"}, @{@"text":@"本地相册"}, nil];
    
    HBPopListView *lplv = [[HBPopListView alloc] initWithTitle:@"请选择" options:popViewOptions];
    lplv.canCancelFlag = YES;
    lplv.delegate = self;
    
    [lplv showInView:self.view animated:YES];

}

- (IBAction)exitAccount:(id)sender {
    
}

- (void)checkVersionUpdate {
    MBProgressHUD *hud = [[MBProgressHUD alloc] init];
    hud.labelText = @"正在检测";
    [self.view addSubview:hud];
    
    __block HBUpdateInfo *update;
    [hud showAnimated:YES whileExecutingBlock:^{
//        serverConnect = [[HBServerConnect alloc] init];
//        
//        NSString *currVersion = [HBCommonUtil getAppBuildVersion];
//        
//        update = [serverConnect checkUpdate:currVersion];
//    }completionBlock:^{
//        if (!update) {
//            [HBCommonUtil showAttention:@"获取服务器信息失败，请检查网络连接状态" sender:self];
//            return;
//        }
//        
//        if (!update.isupdate) {
//            [self.view makeToast:@"当前程序已经是最新版本"];
//            return;
//        }
//        else {
//            updateUrlStr = update.downloadurl;
//            [self showUpdateAlert:update.updateDesc];
//        }
//        
    }];
}

- (IBAction)setNotificationEnabled:(id)sender {
}



- (IBAction)setBugReport:(id)sender {
    
}

- (void)passwordChanged
{
    [self.view makeToast:@"密码修改成功，请牢记您的新密码"];
}

- (void)showUpdateAlert:(NSString *)updateMsg
{
    NSString *message = [NSString stringWithFormat:@"发现新版本，是否现在升级？\n更新说明：\n%@", updateMsg];
    if (SYSTEM_VERSION_HIGHER(8.0)) {
        UIAlertController *alertController = [UIAlertController alertControllerWithTitle:@"升级提示"
                                                                                 message:message
                                                                          preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:@"以后再说" style:UIAlertActionStyleCancel handler:nil];
        [alertController addAction:cancelAction];
        
        UIAlertAction *okAction = [UIAlertAction actionWithTitle:@"升级" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action){
            NSURL *downloadUrl = [NSURL URLWithString:updateUrlStr];
            [[UIApplication sharedApplication]openURL:downloadUrl];
            
            [HBCommonUtil recordConfiguration];
            
            [self exitApplication];
        }];
        [alertController addAction:okAction];
        
        [self presentViewController:alertController animated:YES completion:nil];
    }
    else {
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"升级提示"
                                                                      message:message
                                                                     delegate:self
                                                            cancelButtonTitle:@"以后再说"
                                                            otherButtonTitles:@"升级", nil];
        alertView.tag = 100;
        
        for( UIView * view in alertView.subviews )
        {
            if( [view isKindOfClass:[UILabel class]] )
            {
                UILabel* label = (UILabel*) view;
                
                label.textAlignment = NSTextAlignmentLeft;
            }
        }
        
        [alertView show];
    }
}


- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (alertView.tag == 100 &&  buttonIndex == 1) {
        NSURL *downloadUrl = [NSURL URLWithString:updateUrlStr];
        //NSURL *downloadUrl = [NSURL URLWithString:@"itms-services://?action=download-manifest&amp;url=https://dn-hebca-kuaiban.qbox.me/kuaiban.plist"];
        [[UIApplication sharedApplication]openURL:downloadUrl];
    }
}

- (void)willPresentAlertView:(UIAlertView *)alertView
{
    for( UIView * view in alertView.subviews )
    {
        if( [view isKindOfClass:[UILabel class]] )
        {
            UILabel* label = (UILabel*) view;
            
            label.textAlignment = NSTextAlignmentLeft;
        }
    }
}

#pragma mark - LeveyPopListView delegates
- (void)myPopListView:(HBPopListView *)popListView didSelectedIndex:(NSInteger)anIndex
{
    if (0 == anIndex) //照相机
    {
        UIImagePickerControllerSourceType sourceType = UIImagePickerControllerSourceTypeCamera;
        if ([UIImagePickerController isSourceTypeAvailable: UIImagePickerControllerSourceTypeCamera])
        {
            UIImagePickerController *picker = [[UIImagePickerController alloc] init];
            picker.delegate = self;
            //设置拍照后的图片可被编辑
            picker.allowsEditing = YES;
            picker.sourceType = sourceType;
            [self presentViewController:picker animated:YES completion:nil];
        }else
        {
            [self.view makeToast:@"启动照相机失败"];
        }   
    }
    else //相册
    {
        UIImagePickerController *picker = [[UIImagePickerController alloc] init];
        
        picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        picker.delegate = self;
        picker.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
        //设置选择后的图片可被编辑
        picker.allowsEditing = YES;
        [self presentViewController:picker animated:YES completion:nil];;
    }
}

- (void)myPopListViewDidCancel
{
}

-(void)imagePickerController:(UIImagePickerController*)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    NSString *type = [info objectForKey:UIImagePickerControllerMediaType];
    
    //当选择的类型是图片
    if ([type isEqualToString:@"public.image"])
    {
        //关闭相册界面
        [picker dismissViewControllerAnimated:YES completion:nil];
        
        //保存配置
        AppDelegate *appDelegate = [[UIApplication sharedApplication] delegate];
        appDelegate.userConfig.hasHeadImg = YES;
        [HBCommonUtil updateUserConfig:appDelegate.userConfig];
        
        //获取图片并压缩
        UIImage* image = [info objectForKey:@"UIImagePickerControllerEditedImage"];
        UIImage *imageNew = [HBCommonUtil compressImage:image toLevel:2];
        NSData *imageData = UIImagePNGRepresentation(imageNew);
        
        
        //这里将图片保存为 -/Documents/heads/head.png
        NSFileManager *fileManager = [NSFileManager defaultManager];
        NSString * DocumentsPath = [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"];
        NSString * headFolder = [DocumentsPath stringByAppendingPathComponent:@"/heads"];
        BOOL isDir = YES;
        NSError *error = nil;
        if (![fileManager fileExistsAtPath:headFolder isDirectory:&isDir]) {
        [fileManager createDirectoryAtPath:headFolder withIntermediateDirectories:YES attributes:nil error:&error];
        }
         
        NSString *imagePath = [headFolder stringByAppendingString:@"/head.png"];
        if ([fileManager fileExistsAtPath:imagePath]) {
            [fileManager removeItemAtPath:imagePath error:nil];
        }
        [fileManager createFileAtPath:imagePath contents:imageData attributes:nil];
        
        //上传头像
        MBProgressHUD *hud = [[MBProgressHUD alloc] init];
        hud.labelText = @"正在设置，请稍后";
        [self.view addSubview:hud];
        
        __block NSString *errorMsg = nil;
        [hud showAnimated:YES whileExecutingBlock:^{
            errorMsg = [self uploadUserHeadImage:imagePath];
        }completionBlock:^{
            if (errorMsg) {
                [self.navigationController.view makeToast:errorMsg];
                return;
            }
            //设置页面头像
            [self.userHeadImg setImage:imageNew forState:UIControlStateNormal];
            
            [self.navigationController.view makeToast:@"设置成功"];
        }];
    }
}

- (NSString *)uploadUserHeadImage:(NSString *)imagePath
{
    if (IS_NULL_STRING(imagePath)) {
        return nil;
    }
    
    //上传头像 保存配置
    HBCustomConfig *config = [[HBCustomConfig alloc] init];
    serverConnect = [[HBServerConnect alloc] init];
    
    config.userid = userid;
    config.key    = @"head";
    config.value  = @"";
    config.attachment = imagePath;
    config.descript = @"用户头像";
    
    NSInteger result = [serverConnect uploadCustomConfig:config];
    if (result != HM_OK) {
        return [serverConnect getLastErrorMessage];
    }
    
    return nil;
}

- (void)exitApplication {
    
    [UIView beginAnimations:@"exitApplication" context:nil];
    
    [UIView setAnimationDuration:0.3];
    
    [UIView setAnimationDelegate:self];
    [UIView setAnimationTransition:UIViewAnimationTransitionNone forView:self.view cache:NO];
    
    [UIView setAnimationDidStopSelector:@selector(animationFinished:finished:context:)];
    
    self.view.bounds = CGRectMake(0, 0, 0, 0);
    
    [UIView commitAnimations];
    
}

- (void)animationFinished:(NSString *)animationID finished:(NSNumber *)finished context:(void *)context {
    
    if ([animationID compare:@"exitApplication"] == 0) {
        exit(0);
    }
}


@end
